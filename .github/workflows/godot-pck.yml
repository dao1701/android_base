name: Godot PCK Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download Godot
      run: |
        wget https://github.com/godotengine/godot/releases/download/4.4.1-stable/Godot_v4.4.1-stable_linux.x86_64.zip
        unzip Godot_v4.4.1-stable_linux.x86_64.zip
        chmod +x Godot_v4.4.1-stable_linux.x86_64

    - name: Create PCK file
      run: |
        ./Godot_v4.4.1-stable_linux.x86_64 --export-pack Android project.pck . --headless
    - name: Upload PCK file
      uses: actions/upload-artifact@v4
      with:
        name: project-pck
        path: project.pck
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3

      - name: Download PCK artifact
        uses: actions/download-artifact@v4
        with:
          name: project-pck

      - name: Set up Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git fetch --tags

      - name: Get version/tag
        id: vars
        run: |
          TAG_NAME="release-$(date +'%Y%m%d%H%M%S')"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          # Create version info file
          echo "Release: $TAG_NAME" > version.txt
          echo "Commit: ${{ github.sha }}" >> version.txt
          echo "Build Date: $(date +'%Y-%m-%d %H:%M:%S')" >> version.txt
          echo "Branch: ${{ github.ref_name }}" >> version.txt
          echo "Last Commit Message: $(git log -1 --pretty=%B)" >> version.txt

      - name: Create Git tag
        run: |
          git tag ${{ steps.vars.outputs.tag_name }}
          git push origin ${{ steps.vars.outputs.tag_name }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          name: Release ${{ steps.vars.outputs.tag_name }}
          files: |
            project.pck
            version.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
